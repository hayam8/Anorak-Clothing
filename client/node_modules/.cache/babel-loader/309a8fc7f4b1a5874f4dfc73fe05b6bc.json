{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\src\\\\components\\\\auth\\\\sign-in\\\\SignIn.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../../form-input/FormInput\";\nimport Button from \"../../button/Button\";\nimport { googleSignInStart, emailSignInStart } from \"../../../redux/user/userActions\";\nimport \"./sign-in.scss\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const emailSignInStart = this.props.emailSignInStart; // try {\n      //   await auth.signInWithEmailAndPassword(email, password);\n      //   this.clearState();\n      // } catch (e) {\n      //   console.log(e);\n      // }\n    };\n\n    this.onChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.clearState = () => {\n      this.setState({\n        email: \"\",\n        password: \"\"\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Already have an account?\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\components\\auth\\sign-in\\SignIn.js"],"names":["React","Component","connect","FormInput","Button","googleSignInStart","emailSignInStart","SignIn","constructor","props","onSubmit","e","preventDefault","state","email","password","onChange","target","value","name","setState","clearState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormInput from \"../../form-input/FormInput\";\r\nimport Button from \"../../button/Button\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart\r\n} from \"../../../redux/user/userActions\";\r\n\r\nimport \"./sign-in.scss\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n    const { emailSignInStart } = this.props;\r\n    // try {\r\n    //   await auth.signInWithEmailAndPassword(email, password);\r\n    //   this.clearState();\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n      <div className='sign-in'>\r\n        <h2>Already have an account?</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            label='password'\r\n            required\r\n          />\r\n          <div className='buttons'>\r\n            <Button type='submit'>Sign In</Button>\r\n            <Button type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n              Sign in with Google\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}