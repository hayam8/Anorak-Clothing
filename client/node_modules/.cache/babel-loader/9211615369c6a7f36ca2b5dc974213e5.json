{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nimport { TOGGLE_CART_VISIBILITY, ADD_ITEM, CLEAR_ITEM_FROM_CART, REMOVE_ITEM, CLEAR_CART } from \"./cart.types\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_VISIBILITY:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItem: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\cart\\cartReducer.js"],"names":["addItemToCart","removeItemFromCart","TOGGLE_CART_VISIBILITY","ADD_ITEM","CLEAR_ITEM_FROM_CART","REMOVE_ITEM","CLEAR_CART","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","payload","filter","cartItem","id"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AACA,SACEC,sBADF,EAEEC,QAFF,EAGEC,oBAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,cANP;AAQA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,sBAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAKF,SAAKL,QAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,SAAS,EAAET,aAAa,CAACW,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAF1B;;AAIF,SAAKV,oBAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,MAAM,CAACE,OAAP,CAAeG,EADlC;AAFb;;AAMF,SAAKZ,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,SAAS,EAAER,kBAAkB,CAACU,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAF/B;;AAIF,SAAKR,UAAL;AACE,+BACKK,KADL;AAEEK,QAAAA,QAAQ,EAAE;AAFZ;;AAIF;AACE,aAAOL,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import { addItemToCart, removeItemFromCart } from \"./cart.utils\";\r\nimport {\r\n  TOGGLE_CART_VISIBILITY,\r\n  ADD_ITEM,\r\n  CLEAR_ITEM_FROM_CART,\r\n  REMOVE_ITEM,\r\n  CLEAR_CART\r\n} from \"./cart.types\";\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: []\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CART_VISIBILITY:\r\n      return {\r\n        ...state,\r\n        hidden: !state.hidden\r\n      };\r\n\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload)\r\n      };\r\n    case CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          cartItem => cartItem.id !== action.payload.id\r\n        )\r\n      };\r\n    case REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n      };\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartItem: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}