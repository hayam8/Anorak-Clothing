{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { signInSuccess, signInFail, signOutSuccess, signOutFail, signUpFail, signUpStart, signUpSuccess } from \"./userActions\";\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, SIGN_IN_SUCCESS, SIGN_IN_FAIL, CHECK_USER_SESSION, SIGN_OUT_START, SIGN_UP_START, SIGN_UP_SUCCESS } from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    // create user document in firebase\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    // pull off user object from user ref\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFail(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return; // user never logged in\n\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFail(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n}\n/**\r\n * Instantiate call to all other sagas\r\n */\n\nexport function* userSagas() {\n  yield all([call(onSignUpStart), call(onSignUpSuccess), call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","signInSuccess","signInFail","signOutSuccess","signOutFail","signUpFail","signUpStart","signUpSuccess","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAIL","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_UP_START","SIGN_UP_SUCCESS","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","isUserAuthenticated","signOut","onSignUpStart","onSignUpSuccess","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport {\r\n  signInSuccess,\r\n  signInFail,\r\n  signOutSuccess,\r\n  signOutFail,\r\n  signUpFail,\r\n  signUpStart,\r\n  signUpSuccess\r\n} from \"./userActions\";\r\nimport {\r\n  GOOGLE_SIGN_IN_START,\r\n  EMAIL_SIGN_IN_START,\r\n  SIGN_IN_SUCCESS,\r\n  SIGN_IN_FAIL,\r\n  CHECK_USER_SESSION,\r\n  SIGN_OUT_START,\r\n  SIGN_UP_START,\r\n  SIGN_UP_SUCCESS\r\n} from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n  try {\r\n    // create user document in firebase\r\n    const userRef = yield call(\r\n      createUserProfileDocument,\r\n      userAuth,\r\n      additionalData\r\n    );\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signInFail(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    // pull off user object from user ref\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFail(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (error) {\r\n    yield put(signInFail(error));\r\n  }\r\n}\r\n\r\nexport function* signUp({ payload: { displayName, email, password } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n  } catch (error) {\r\n    yield put(signUpFail(error));\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData } }) {\r\n  yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return; // user never logged in\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (error) {\r\n    yield put(signInFail(error));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess());\r\n  } catch (error) {\r\n    yield put(signOutFail(error));\r\n  }\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(SIGN_OUT_START, signOut);\r\n}\r\n\r\n/**\r\n * Instantiate call to all other sagas\r\n */\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onSignUpStart),\r\n    call(onSignUpSuccess),\r\n    call(onGoogleSignInStart),\r\n    call(onEmailSignInStart),\r\n    call(isUserAuthenticated),\r\n    call(onSignOutStart)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}