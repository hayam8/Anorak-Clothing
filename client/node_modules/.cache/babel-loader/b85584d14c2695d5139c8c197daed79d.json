{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\src\\\\pages\\\\shop\\\\ShopPage.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { loadCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionLoading, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\nimport CollectionPage from \"../collection/CollectionPage\";\nimport Spinner from \"../../components/spinner/Spinner\";\nconst CollectionsOverviewWithSpinner = Spinner(CollectionsOverview);\nconst CollectionPageWithSpinner = Spinner(CollectionPage);\n\nclass ShopPage extends Component {\n  // retreive data for collections from firebase\n  componentDidMount() {\n    const loadCollectionsStartAsync = this.props.loadCollectionsStartAsync;\n    loadCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isLoading = _this$props.isLoading,\n          isLoaded = _this$props.isLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionLoading,\n  isLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadCollectionsStartAsync: () => dispatch(loadCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\pages\\shop\\ShopPage.js"],"names":["React","Component","Route","connect","createStructuredSelector","loadCollectionsStartAsync","selectIsCollectionLoading","selectIsCollectionsLoaded","CollectionsOverview","CollectionPage","Spinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isLoading","isLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SACEC,yBADF,EAEEC,yBAFF,QAGO,iCAHP;AAIA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,MAAMC,8BAA8B,GAAGD,OAAO,CAACF,mBAAD,CAA9C;AACA,MAAMI,yBAAyB,GAAGF,OAAO,CAACD,cAAD,CAAzC;;AAEA,MAAMI,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/B;AACAa,EAAAA,iBAAiB,GAAG;AAAA,UACVT,yBADU,GACoB,KAAKU,KADzB,CACVV,yBADU;AAElBA,IAAAA,yBAAyB;AAC1B;;AAEDW,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,SADR,eACQA,SADR;AAAA,UACmBC,QADnB,eACmBA,QADnB;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAqDJ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AA3B8B;;AA8BjC,MAAMM,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Cc,EAAAA,SAAS,EAAEZ,yBADoC;AAE/Ca,EAAAA,QAAQ,EAAEZ;AAFqC,CAAD,CAAhD;;AAKA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,yBAAyB,EAAE,MAAMkB,QAAQ,CAAClB,yBAAyB,EAA1B;AADH,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CACpBkB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbT,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { loadCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport {\r\n  selectIsCollectionLoading,\r\n  selectIsCollectionsLoaded\r\n} from \"../../redux/shop/shop.selectors\";\r\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\r\nimport CollectionPage from \"../collection/CollectionPage\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\n\r\nconst CollectionsOverviewWithSpinner = Spinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = Spinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  // retreive data for collections from firebase\r\n  componentDidMount() {\r\n    const { loadCollectionsStartAsync } = this.props;\r\n    loadCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isLoading, isLoaded } = this.props;\r\n\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={props => (\r\n            <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner isLoading={!isLoaded} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: selectIsCollectionLoading,\r\n  isLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadCollectionsStartAsync: () => dispatch(loadCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}