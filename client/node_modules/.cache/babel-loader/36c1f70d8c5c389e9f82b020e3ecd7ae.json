{"ast":null,"code":"import { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: fetchCollectionsFailure,\n  paylod: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart);\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\shop\\shop.actions.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsFailure","errorMessage","paylod","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SACEA,uBADF,EAEEC,yBAFF,QAGO,cAHP;AAKA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEL;AADoC,CAAP,CAA9B;AAIP,OAAO,MAAMM,uBAAuB,GAAGC,cAAc,KAAK;AACxDF,EAAAA,IAAI,EAAEJ,yBADkD;AAExDO,EAAAA,OAAO,EAAED;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAME,uBAAuB,GAAGC,YAAY,KAAK;AACtDL,EAAAA,IAAI,EAAEI,uBADgD;AAEtDE,EAAAA,MAAM,EAAED;AAF8C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACT,qBAAD,CAAR;AAEAU,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMX,cAAc,GAAGJ,+BAA+B,CAACe,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGY,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD,GAZD;AAaD,CAdM","sourcesContent":["import {\r\n  FETCH_COLLECTIONS_START,\r\n  FETCH_COLLECTIONS_SUCCESS\r\n} from \"./shop.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: fetchCollectionsFailure,\r\n  paylod: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    dispatch(fetchCollectionsStart);\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}