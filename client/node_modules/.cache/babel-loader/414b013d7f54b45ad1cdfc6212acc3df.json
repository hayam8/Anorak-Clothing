{"ast":null,"code":"import { LOAD_COLLECTIONS_START, LOAD_COLLECTIONS_SUCCESS, LOAD_COLLECTIONS_FAILURE } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const loadCollectionsStart = () => ({\n  type: LOAD_COLLECTIONS_START\n});\nexport const loadCollectionsSuccess = collectionsMap => ({\n  type: LOAD_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const loadCollectionsFailure = errorMessage => ({\n  type: LOAD_COLLECTIONS_FAILURE,\n  paylod: errorMessage\n});\nexport const loadCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(loadCollectionsStart);\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(loadCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(loadCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\shop\\shop.actions.js"],"names":["LOAD_COLLECTIONS_START","LOAD_COLLECTIONS_SUCCESS","LOAD_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","loadCollectionsStart","type","loadCollectionsSuccess","collectionsMap","payload","loadCollectionsFailure","errorMessage","paylod","loadCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SACEA,sBADF,EAEEC,wBAFF,EAGEC,wBAHF,QAIO,cAJP;AAMA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEN;AADmC,CAAP,CAA7B;AAIP,OAAO,MAAMO,sBAAsB,GAAGC,cAAc,KAAK;AACvDF,EAAAA,IAAI,EAAEL,wBADiD;AAEvDQ,EAAAA,OAAO,EAAED;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAME,sBAAsB,GAAGC,YAAY,KAAK;AACrDL,EAAAA,IAAI,EAAEJ,wBAD+C;AAErDU,EAAAA,MAAM,EAAED;AAF6C,CAAL,CAA3C;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACT,oBAAD,CAAR;AAEAU,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMX,cAAc,GAAGJ,+BAA+B,CAACe,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,KALH,EAMGY,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAN1B;AAOD,GAZD;AAaD,CAdM","sourcesContent":["import {\r\n  LOAD_COLLECTIONS_START,\r\n  LOAD_COLLECTIONS_SUCCESS,\r\n  LOAD_COLLECTIONS_FAILURE\r\n} from \"./shop.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const loadCollectionsStart = () => ({\r\n  type: LOAD_COLLECTIONS_START\r\n});\r\n\r\nexport const loadCollectionsSuccess = collectionsMap => ({\r\n  type: LOAD_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const loadCollectionsFailure = errorMessage => ({\r\n  type: LOAD_COLLECTIONS_FAILURE,\r\n  paylod: errorMessage\r\n});\r\n\r\nexport const loadCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    dispatch(loadCollectionsStart);\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(loadCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch(error => dispatch(loadCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}