{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n/**\r\n * @params array of input selectors, function that\r\n * returns desired value from selector\r\n */\n\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\n/**\r\n * @returns number of items in shopping cart\r\n */\n\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => (accumulatedQuantity + cartItem.quantity) * cartItem.price, 0));","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\cart\\cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;AAEA;;;;;;AAIA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP;;;;AAGA,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IACPA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAH8C,CAA3C;AAUP,OAAO,MAAMC,gBAAgB,GAAGX,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACS,MAF+B,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IACPA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACE,CAACD,mBAAmB,GAAGC,QAAQ,CAACC,QAAhC,IAA4CD,QAAQ,CAACK,KAFzD,EAGE,CAHF,CAHyC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectCart = state => state.cart;\r\n\r\n/**\r\n * @params array of input selectors, function that\r\n * returns desired value from selector\r\n */\r\nexport const selectCartItems = createSelector(\r\n  [selectCart],\r\n  cart => cart.cartItems\r\n);\r\n\r\n/**\r\n * @returns number of items in shopping cart\r\n */\r\nexport const selectCartItemsCount = createSelector(\r\n  [selectCartItems],\r\n  cartItems =>\r\n    cartItems.reduce(\r\n      (accumulatedQuantity, cartItem) =>\r\n        accumulatedQuantity + cartItem.quantity,\r\n      0\r\n    )\r\n);\r\n\r\nexport const selectCartHidden = createSelector(\r\n  [selectCart],\r\n  cart => cart.hidden\r\n);\r\n\r\nexport const selectCartTotal = createSelector(\r\n  [selectCartItems],\r\n  cartItems =>\r\n    cartItems.reduce(\r\n      (accumulatedQuantity, cartItem) =>\r\n        (accumulatedQuantity + cartItem.quantity) * cartItem.price,\r\n      0\r\n    )\r\n);\r\n"]},"metadata":{},"sourceType":"module"}