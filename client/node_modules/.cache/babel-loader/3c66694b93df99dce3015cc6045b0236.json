{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport NavBar from \"./components/nav-bar/NavBar\";\nimport HomePage from \"./pages/home/HomePage\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport SignInAndSignUp from \"./pages/auth/SignInAndSignUp\";\nimport CheckoutPage from \"./pages/checkout/CheckoutPage\";\nimport { auth, createUserProfileDocument //addCollectionAndDocuments\n} from \"./firebase/firebase.utils\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\"; //import { selectCollectionsForPreview } from \"./redux/shop/shop.selectors\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  // set user to logged in user\n  componentDidMount() {} // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     const userRef = await createUserProfileDocument(userAuth);\n  //     // CALL DISPATCH ON SET CURRENT USER REDUCER\n  //     userRef.onSnapshot(snapShot => {\n  //       setCurrentUser({\n  //         id: snapShot.id,\n  //         ...snapShot.data()\n  //       });\n  //     });\n  //   }\n  //   setCurrentUser(userAuth);\n  // Return object of titles & items, ignoring other values\n\n  /*\n    addCollectionAndDocuments(\n      \"collections\",\n      collectionsArray.map(({ title, items }) => ({ title, items }))\n    );\n    */\n  // });\n  // logs out user when component unmounts\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //collectionsArray: selectCollectionsForPreview\n\n});\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\App.js"],"names":["React","Component","Route","Switch","Redirect","connect","createStructuredSelector","NavBar","HomePage","ShopPage","SignInAndSignUp","CheckoutPage","auth","createUserProfileDocument","selectCurrentUser","App","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SACEC,IADF,EAEEC,yBAFF,CAGE;AAHF,OAIO,2BAJP;AAKA,SAASC,iBAAT,QAAkC,4BAAlC,C,CACA;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1Be,mBAD0B,GACJ,IADI;AAAA;;AAG1B;AACAC,EAAAA,iBAAiB,GAAG,CAqBnB,CArBgB,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;AAMA;AAGF;;;AACAC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEE,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKS,KAAL,CAAWC,WAAX,GAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,GAA+C,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAFF,CADF;AAiBD;;AAlDyB;;AAqD5B,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Ce,EAAAA,WAAW,EAAEP,iBADkC,CAE/C;;AAF+C,CAAD,CAAhD;AAKA,eAAeT,OAAO,CAACiB,eAAD,CAAP,CAAyBP,GAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport NavBar from \"./components/nav-bar/NavBar\";\nimport HomePage from \"./pages/home/HomePage\";\nimport ShopPage from \"./pages/shop/ShopPage\";\nimport SignInAndSignUp from \"./pages/auth/SignInAndSignUp\";\nimport CheckoutPage from \"./pages/checkout/CheckoutPage\";\n\nimport {\n  auth,\n  createUserProfileDocument\n  //addCollectionAndDocuments\n} from \"./firebase/firebase.utils\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n//import { selectCollectionsForPreview } from \"./redux/shop/shop.selectors\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  unsubscribeFromAuth = null;\n\n  // set user to logged in user\n  componentDidMount() {\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     // CALL DISPATCH ON SET CURRENT USER REDUCER\n    //     userRef.onSnapshot(snapShot => {\n    //       setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data()\n    //       });\n    //     });\n    //   }\n    //   setCurrentUser(userAuth);\n    // Return object of titles & items, ignoring other values\n    /*\n      addCollectionAndDocuments(\n        \"collections\",\n        collectionsArray.map(({ title, items }) => ({ title, items }))\n      );\n      */\n    // });\n  }\n\n  // logs out user when component unmounts\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route\n            exact\n            path='/signin'\n            render={() =>\n              this.props.currentUser ? <Redirect to='/' /> : <SignInAndSignUp />\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n  //collectionsArray: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}