{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { googleSignInSuccess, googleSignInFail, emailSignInSuccess, emailSignInFail } from \"./userActions\";\nimport { GOOGLE_SIGN_IN_START, GOOGLE_SIGN_IN_SUCCESS, GOOGLE_SIGN_IN_FAIL, EMAIL_SIGN_IN_START, EMAIL_SIGN_IN_SUCCESS, EMAIL_SIGN_IN_FAIL } from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* signInWithGoogle() {\n  try {\n    // pull off user object from user ref\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFail(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFail(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\n/**\r\n * Instantiate call to all other sagas\r\n */\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\user\\user.sagas.js"],"names":["takeLatest","put","all","call","googleSignInSuccess","googleSignInFail","emailSignInSuccess","emailSignInFail","GOOGLE_SIGN_IN_START","GOOGLE_SIGN_IN_SUCCESS","GOOGLE_SIGN_IN_FAIL","EMAIL_SIGN_IN_START","EMAIL_SIGN_IN_SUCCESS","EMAIL_SIGN_IN_FAIL","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","userSagas"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SACEC,mBADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,eALP;AAMA,SACEC,oBADF,EAEEC,sBAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,qBALF,EAMEC,kBANF,QAOO,cAPP;AASA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF;AADE,iBAEe,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CAFrB;AAAA,UAEMI,IAFN,QAEMA,IAFN;;AAGF,UAAMC,OAAO,GAAG,MAAMjB,IAAI,CAACa,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMrB,GAAG,CACPG,mBAAmB;AAAGmB,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADZ,CAAT;AAGD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACI,gBAAgB,CAACoB,KAAD,CAAjB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAM1B,UAAU,CAACQ,oBAAD,EAAuBS,gBAAvB,CAAhB;AACD;AAED,OAAO,UAAUU,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMhB,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMX,IADN,SACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMjB,IAAI,CAACa,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMrB,GAAG,CACPK,kBAAkB;AAAGiB,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADX,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACM,eAAe,CAACkB,KAAD,CAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUO,kBAAV,GAA+B;AACpC,QAAMhC,UAAU,CAACW,mBAAD,EAAsBgB,eAAtB,CAAhB;AACD;AAED;;;;AAGA,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAAC6B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport {\r\n  googleSignInSuccess,\r\n  googleSignInFail,\r\n  emailSignInSuccess,\r\n  emailSignInFail\r\n} from \"./userActions\";\r\nimport {\r\n  GOOGLE_SIGN_IN_START,\r\n  GOOGLE_SIGN_IN_SUCCESS,\r\n  GOOGLE_SIGN_IN_FAIL,\r\n  EMAIL_SIGN_IN_START,\r\n  EMAIL_SIGN_IN_SUCCESS,\r\n  EMAIL_SIGN_IN_FAIL\r\n} from \"./user.types\";\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    // pull off user object from user ref\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(googleSignInFail(error));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(\r\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n    );\r\n  } catch (error) {\r\n    yield put(emailSignInFail(error));\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\n/**\r\n * Instantiate call to all other sagas\r\n */\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}