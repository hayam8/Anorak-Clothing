{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\n/**\r\n * Retrieves all keys for collections (hats, shoes, jackets, etc) and map over array to return objects for keys\r\n */\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\n/**\r\n * Grabs string value in url and matches it to correct collection to display.\r\n * Find the collection.id matching url param of collection id map\r\n * @param {*} collectionUrlParam\r\n */\n\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionLoading = createSelector([selectShop], shop => shop.isLoading);","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\shop\\shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionLoading","isLoading"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACE,WAFgC,CAAxC;AAKP;;;;AAGA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDC,WAAW,IACTA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHjB,CAAlD;AAMP;;;;;;AAKA,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFpD,CADT;AAMP,OAAO,MAAMC,yBAAyB,GAAGb,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,SAFwC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  shop => shop.collections\r\n);\r\n\r\n/**\r\n * Retrieves all keys for collections (hats, shoes, jackets, etc) and map over array to return objects for keys\r\n */\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  collections =>\r\n    collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\n/**\r\n * Grabs string value in url and matches it to correct collection to display.\r\n * Find the collection.id matching url param of collection id map\r\n * @param {*} collectionUrlParam\r\n */\r\nexport const selectCollection = collectionUrlParam =>\r\n  createSelector(\r\n    [selectCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : null)\r\n  );\r\n\r\nexport const selectIsCollectionLoading = createSelector(\r\n  [selectShop],\r\n  shop => shop.isLoading\r\n);\r\n"]},"metadata":{},"sourceType":"module"}