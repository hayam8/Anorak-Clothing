{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\src\\\\components\\\\auth\\\\sign-up\\\\SignUp.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../../form-input/FormInput\";\nimport Button from \"../../button/Button\";\nimport { signUpStart } from \"../../../redux/user/userActions\";\nimport { auth, createUserProfileDocument } from \"../../../firebase/firebase.utils\";\nimport \"./sign-up.scss\";\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.clearForm = () => {\n      this.setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords do not match!\");\n        return;\n      }\n\n      signUpStart(displayName, email, password);\n      this.clearForm(); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(\n      //     email,\n      //     password\n      //   );\n      //   createUserProfileDocument(user, { displayName });\n      //   this.clearForm();\n      // } catch (e) {\n      //   console.error(e);\n      // }\n    };\n\n    this.onChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"I need to create an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sign up with your email\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.onChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.onChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"CREATE ACCOUNT\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password) => dispatch(signUpStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\components\\auth\\sign-up\\SignUp.js"],"names":["React","Component","connect","FormInput","Button","signUpStart","auth","createUserProfileDocument","SignUp","constructor","clearForm","setState","displayName","email","password","confirmPassword","onSubmit","e","preventDefault","props","state","alert","onChange","target","name","value","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FormInput from \"../../form-input/FormInput\";\r\nimport Button from \"../../button/Button\";\r\nimport { signUpStart } from \"../../../redux/user/userActions\";\r\nimport {\r\n  auth,\r\n  createUserProfileDocument\r\n} from \"../../../firebase/firebase.utils\";\r\n\r\nimport \"./sign-up.scss\";\r\n\r\nclass SignUp extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    };\r\n  }\r\n\r\n  clearForm = () => {\r\n    this.setState({\r\n      displayName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    });\r\n  };\r\n\r\n  onSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const { signUpStart } = this.props;\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    signUpStart(displayName, email, password);\r\n    this.clearForm();\r\n\r\n    // try {\r\n    //   const { user } = await auth.createUserWithEmailAndPassword(\r\n    //     email,\r\n    //     password\r\n    //   );\r\n    //   createUserProfileDocument(user, { displayName });\r\n\r\n    //   this.clearForm();\r\n    // } catch (e) {\r\n    //   console.error(e);\r\n    // }\r\n  };\r\n\r\n  onChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n      <div className='sign-up'>\r\n        <h2 className='title'>I need to create an account</h2>\r\n        <span>Sign up with your email</span>\r\n        <form className='sign-up-form' onSubmit={this.onSubmit}>\r\n          <FormInput\r\n            type='text'\r\n            name='displayName'\r\n            value={displayName}\r\n            onChange={this.onChange}\r\n            label='Display Name'\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={this.onChange}\r\n            label='Email'\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={this.onChange}\r\n            label='Password'\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            type='password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={this.onChange}\r\n            label='Confirm Password'\r\n            required\r\n          />\r\n          <Button type='submit'>CREATE ACCOUNT</Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: (email, password) => dispatch(signUpStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}