{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hayam\\\\Projects\\\\react\\\\online-store\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// look through cart items to see if one to be added exists for simplicity in viewing quantities of each individual item in card\nexport const addItemToCart = (cartItems, cardItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["C:\\Users\\hayam\\Projects\\react\\online-store\\src\\redux\\cart\\cart.utils.js"],"names":["addItemToCart","cartItems","cardItemToAdd","existingCartItem","find","cartItem","id","cartItemToAdd","map","quantity"],"mappings":";;;;;;AAAA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBC,aAAa,CAACD,EADnB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACO,GAAV,CAAcH,QAAQ,IAC3BA,QAAQ,CAACC,EAAT,KAAgBC,aAAa,CAACD,EAA9B,qBACSD,QADT;AACmBI,MAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QAAT,GAAoB;AADjD,SAEIJ,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBM,aAApB;AAAmCE,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAdM","sourcesContent":["// look through cart items to see if one to be added exists for simplicity in viewing quantities of each individual item in card\r\nexport const addItemToCart = (cartItems, cardItemToAdd) => {\r\n  const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.id === cartItemToAdd.id\r\n  );\r\n\r\n  if (existingCartItem) {\r\n    return cartItems.map(cartItem =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}